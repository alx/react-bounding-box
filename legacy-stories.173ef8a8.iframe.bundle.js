"use strict";(self.webpackChunkreact_bounding_box=self.webpackChunkreact_bounding_box||[]).push([[82],{"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./stories/static/styles.css":(module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/sourceMaps.js"),_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,".cssStory {\n  border: 2px solid #3b82f6;\n  border-radius: 8px;\n  padding: 16px;\n  background: linear-gradient(135deg, #f0f9ff 0%, #e0f2fe 100%);\n  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);\n  max-width: 800px;\n  margin: 20px auto;\n}\n\n.cssStory .boundingSegmentationCanvas {\n  position: relative;\n  top: -485px;\n  opacity: 0.6;\n}\n","",{version:3,sources:["webpack://./stories/static/styles.css"],names:[],mappings:"AAAA;EACE,yBAAyB;EACzB,kBAAkB;EAClB,aAAa;EACb,6DAA6D;EAC7D,6CAA6C;EAC7C,gBAAgB;EAChB,iBAAiB;AACnB;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,YAAY;AACd",sourcesContent:[".cssStory {\n  border: 2px solid #3b82f6;\n  border-radius: 8px;\n  padding: 16px;\n  background: linear-gradient(135deg, #f0f9ff 0%, #e0f2fe 100%);\n  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);\n  max-width: 800px;\n  margin: 20px auto;\n}\n\n.cssStory .boundingSegmentationCanvas {\n  position: relative;\n  top: -485px;\n  opacity: 0.6;\n}\n"],sourceRoot:""}]);const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./node_modules/css-loader/dist/runtime/api.js":module=>{module.exports=function(cssWithMappingToString){var list=[];return list.toString=function toString(){return this.map(function(item){var content="",needLayer=void 0!==item[5];return item[4]&&(content+="@supports (".concat(item[4],") {")),item[2]&&(content+="@media ".concat(item[2]," {")),needLayer&&(content+="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {")),content+=cssWithMappingToString(item),needLayer&&(content+="}"),item[2]&&(content+="}"),item[4]&&(content+="}"),content}).join("")},list.i=function i(modules,media,dedupe,supports,layer){"string"==typeof modules&&(modules=[[null,modules,void 0]]);var alreadyImportedModules={};if(dedupe)for(var k=0;k<this.length;k++){var id=this[k][0];null!=id&&(alreadyImportedModules[id]=!0)}for(var _k=0;_k<modules.length;_k++){var item=[].concat(modules[_k]);dedupe&&alreadyImportedModules[item[0]]||(void 0!==layer&&(void 0===item[5]||(item[1]="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {").concat(item[1],"}")),item[5]=layer),media&&(item[2]?(item[1]="@media ".concat(item[2]," {").concat(item[1],"}"),item[2]=media):item[2]=media),supports&&(item[4]?(item[1]="@supports (".concat(item[4],") {").concat(item[1],"}"),item[4]=supports):item[4]="".concat(supports)),list.push(item))}},list}},"./node_modules/css-loader/dist/runtime/sourceMaps.js":module=>{module.exports=function(item){var content=item[1],cssMapping=item[3];if(!cssMapping)return content;if("function"==typeof btoa){var base64=btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping)))),data="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64),sourceMapping="/*# ".concat(data," */");return[content].concat([sourceMapping]).join("\n")}return[content].join("\n")}},"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":module=>{var stylesInDOM=[];function getIndexByIdentifier(identifier){for(var result=-1,i=0;i<stylesInDOM.length;i++)if(stylesInDOM[i].identifier===identifier){result=i;break}return result}function modulesToDom(list,options){for(var idCountMap={},identifiers=[],i=0;i<list.length;i++){var item=list[i],id=options.base?item[0]+options.base:item[0],count=idCountMap[id]||0,identifier="".concat(id," ").concat(count);idCountMap[id]=count+1;var indexByIdentifier=getIndexByIdentifier(identifier),obj={css:item[1],media:item[2],sourceMap:item[3],supports:item[4],layer:item[5]};if(-1!==indexByIdentifier)stylesInDOM[indexByIdentifier].references++,stylesInDOM[indexByIdentifier].updater(obj);else{var updater=addElementStyle(obj,options);options.byIndex=i,stylesInDOM.splice(i,0,{identifier,updater,references:1})}identifiers.push(identifier)}return identifiers}function addElementStyle(obj,options){var api=options.domAPI(options);api.update(obj);return function updater(newObj){if(newObj){if(newObj.css===obj.css&&newObj.media===obj.media&&newObj.sourceMap===obj.sourceMap&&newObj.supports===obj.supports&&newObj.layer===obj.layer)return;api.update(obj=newObj)}else api.remove()}}module.exports=function(list,options){var lastIdentifiers=modulesToDom(list=list||[],options=options||{});return function update(newList){newList=newList||[];for(var i=0;i<lastIdentifiers.length;i++){var index=getIndexByIdentifier(lastIdentifiers[i]);stylesInDOM[index].references--}for(var newLastIdentifiers=modulesToDom(newList,options),_i=0;_i<lastIdentifiers.length;_i++){var _index=getIndexByIdentifier(lastIdentifiers[_i]);0===stylesInDOM[_index].references&&(stylesInDOM[_index].updater(),stylesInDOM.splice(_index,1))}lastIdentifiers=newLastIdentifiers}}},"./node_modules/style-loader/dist/runtime/insertBySelector.js":module=>{var memo={};module.exports=function insertBySelector(insert,style){var target=function getTarget(target){if(void 0===memo[target]){var styleTarget=document.querySelector(target);if(window.HTMLIFrameElement&&styleTarget instanceof window.HTMLIFrameElement)try{styleTarget=styleTarget.contentDocument.head}catch(e){styleTarget=null}memo[target]=styleTarget}return memo[target]}(insert);if(!target)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");target.appendChild(style)}},"./node_modules/style-loader/dist/runtime/insertStyleElement.js":module=>{module.exports=function insertStyleElement(options){var element=document.createElement("style");return options.setAttributes(element,options.attributes),options.insert(element,options.options),element}},"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=function setAttributesWithoutAttributes(styleElement){var nonce=__webpack_require__.nc;nonce&&styleElement.setAttribute("nonce",nonce)}},"./node_modules/style-loader/dist/runtime/styleDomAPI.js":module=>{module.exports=function domAPI(options){if("undefined"==typeof document)return{update:function update(){},remove:function remove(){}};var styleElement=options.insertStyleElement(options);return{update:function update(obj){!function apply(styleElement,options,obj){var css="";obj.supports&&(css+="@supports (".concat(obj.supports,") {")),obj.media&&(css+="@media ".concat(obj.media," {"));var needLayer=void 0!==obj.layer;needLayer&&(css+="@layer".concat(obj.layer.length>0?" ".concat(obj.layer):""," {")),css+=obj.css,needLayer&&(css+="}"),obj.media&&(css+="}"),obj.supports&&(css+="}");var sourceMap=obj.sourceMap;sourceMap&&"undefined"!=typeof btoa&&(css+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))))," */")),options.styleTagTransform(css,styleElement,options.options)}(styleElement,options,obj)},remove:function remove(){!function removeStyleElement(styleElement){if(null===styleElement.parentNode)return!1;styleElement.parentNode.removeChild(styleElement)}(styleElement)}}}},"./node_modules/style-loader/dist/runtime/styleTagTransform.js":module=>{module.exports=function styleTagTransform(css,styleElement){if(styleElement.styleSheet)styleElement.styleSheet.cssText=css;else{for(;styleElement.firstChild;)styleElement.removeChild(styleElement.firstChild);styleElement.appendChild(document.createTextNode(css))}}},"./stories/legacy.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AgeRealDataset:()=>AgeRealDataset,BorderOnZeroValue:()=>BorderOnZeroValue,BoxSelection:()=>BoxSelection,CustomColorScheme:()=>CustomColorScheme,DefaultView:()=>DefaultView,LabelDisplay:()=>LabelDisplay,PixelSegmentation:()=>PixelSegmentation,RemoteImage:()=>RemoteImage,RemoteImageWithCss:()=>RemoteImageWithCss,SegmentationFromJsonUrl:()=>SegmentationFromJsonUrl,SegmentationMasks:()=>SegmentationMasks,XMinMaxCoordinates:()=>XMinMaxCoordinates,__namedExportsOrder:()=>__namedExportsOrder,default:()=>legacy_stories});__webpack_require__("./node_modules/react/index.js");var dist=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs"),react_bounding_box=__webpack_require__("./src/react-bounding-box.js"),static_image=__webpack_require__("./stories/static/image.jpg"),imageLarge=__webpack_require__("./stories/static/imageLarge.png"),dog=__webpack_require__("./stories/static/dog.jpg"),age_real=__webpack_require__("./stories/static/age_real.png"),segmentation=__webpack_require__("./stories/static/segmentation.json"),segmentationMasks=__webpack_require__("./stories/static/segmentationMasks.json"),segmentationMasksBoxes=__webpack_require__("./stories/static/segmentationMasksBoxes.json"),boxesBorderZero=__webpack_require__("./stories/static/boxesBorderZero.json"),boxesAgeReal=__webpack_require__("./stories/static/boxesAgeReal.json"),injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),styles=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./stories/static/styles.css"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(styles.A,options);styles.A&&styles.A.locals&&styles.A.locals;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const createCopyButton=code=>(0,jsx_runtime.jsx)("button",{onClick:()=>{navigator.clipboard.writeText(code);const btn=event.target,originalText=btn.textContent;btn.textContent="✅ Copied!",btn.style.background="#10b981",setTimeout(()=>{btn.textContent=originalText,btn.style.background="#3b82f6"},2e3)},style:{padding:"4px 8px",background:"#3b82f6",color:"white",border:"none",borderRadius:"4px",cursor:"pointer",fontSize:"12px",fontWeight:"bold"},children:"📋 Copy Code"}),createCodeDisplay=code=>(0,jsx_runtime.jsxs)("div",{style:{padding:"12px",background:"#f8fafc",border:"1px solid #cbd5e1",borderRadius:"6px",marginBottom:"16px",fontFamily:"monospace",fontSize:"14px"},children:[(0,jsx_runtime.jsxs)("div",{style:{display:"flex",justifyContent:"space-between",alignItems:"center",marginBottom:"8px"},children:[(0,jsx_runtime.jsx)("strong",{children:"📋 Code used in this story:"}),createCopyButton(code)]}),(0,jsx_runtime.jsx)("pre",{style:{margin:"0",background:"#f1f5f9",padding:"8px",borderRadius:"4px",overflow:"auto"},children:code})]}),legacy_stories={title:"Legacy Boundingbox (v1.x)",component:react_bounding_box.A},DefaultView={name:"📚 default view",parameters:{docs:{description:{story:"\n**Legacy v1.x BoundingBox Component**\n\nOriginal implementation maintained for backward compatibility. Consider upgrading to Modern v2.x for enhanced performance.\n\n### Legacy Code Example:\n```jsx\nimport Boundingbox from 'react-bounding-box';\n\nfunction LegacyExample() {\n  const boxes = [\n    // coord(0,0) = top left corner of image\n    // [x, y, width, height]\n    [0, 0, 250, 250],\n    [300, 0, 250, 250],\n    [700, 0, 300, 25],\n    [1100, 0, 25, 300],\n  ];\n\n  return (\n    <Boundingbox\n      image=\"/path/to/your/image.jpg\"\n      boxes={boxes}\n    />\n  );\n}\n```\n\n### Migration Recommendation:\n✨ **Upgrade to Modern v2.x** for 40% better performance and enhanced features while maintaining the same API.\n        "}}},render:()=>{const params={image:imageLarge,boxes:[[0,0,250,250],[300,0,250,250],[700,0,300,25],[1100,0,25,300]]};return(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsxs)("div",{style:{padding:"10px",background:"#fff3cd",border:"1px solid #ffeaa7",borderRadius:"4px",marginBottom:"10px"},children:[(0,jsx_runtime.jsx)("strong",{children:"Legacy v1.x Component:"}),' This example uses the original Boundingbox component. Check out the "Modern BoundingBox (v2.x)" section for updated examples with enhanced features.']}),createCodeDisplay("<Boundingbox\n  image={imageLarge}\n  boxes={[\n    [0, 0, 250, 250],\n    [300, 0, 250, 250],\n    [700, 0, 300, 25],\n    [1100, 0, 25, 300]\n  ]}\n/>"),(0,jsx_runtime.jsx)(react_bounding_box.A,{image:params.image,boxes:params.boxes})]})}},XMinMaxCoordinates={name:"📐 xmin/max coordinates",parameters:{docs:{description:{story:"\n**XMin/XMax Coordinate Format**\n\nUse alternative coordinate format with xmin/xmax/ymin/ymax instead of x/y/width/height.\n\n### Code Example:\n```jsx\nimport Boundingbox from 'react-bounding-box';\n\nfunction XMinMaxCoordinatesExample() {\n  const boxesXMinMax = [\n    {xmin: 0, ymin: 0, xmax: 50, ymax: 50},\n    {xmin: 100, ymin: 100, xmax: 200, ymax: 200}\n  ];\n\n  return (\n    <Boundingbox\n      image=\"/path/to/your/image.jpg\"\n      boxes={boxesXMinMax}\n    />\n  );\n}\n```\n\n### Coordinate Formats:\n- **Array format**: [x, y, width, height]\n- **XMin/Max format**: {xmin, ymin, xmax, ymax}\n- Both formats are supported interchangeably\n        "}}},render:()=>{const params={image:imageLarge,boxes:[{xmin:0,ymin:0,xmax:250,ymax:250},{xmin:300,ymin:0,xmax:550,ymax:250},{xmin:700,ymin:0,xmax:1e3,ymax:25},{xmin:1100,ymin:0,xmax:1125,ymax:300}]};return(0,jsx_runtime.jsxs)("div",{children:[createCodeDisplay("<Boundingbox\n  image={imageLarge}\n  boxes={[\n    {xmin: 0, ymin: 0, xmax: 250, ymax: 250},\n    {xmin: 300, ymin: 0, xmax: 550, ymax: 250},\n    {xmin: 700, ymin: 0, xmax: 1000, ymax: 25},\n    {xmin: 1100, ymin: 0, xmax: 1125, ymax: 300}\n  ]}\n/>"),(0,jsx_runtime.jsx)(react_bounding_box.A,{image:params.image,boxes:params.boxes})]})}},AgeRealDataset={name:"👤 Age Real dataset",render:()=>(0,jsx_runtime.jsxs)("div",{children:[createCodeDisplay("<Boundingbox\n  image={ageRealImage}\n  boxes={boxesAgeRealData}\n/>"),(0,jsx_runtime.jsx)(react_bounding_box.A,{image:age_real,boxes:boxesAgeReal})]})},BoxSelection={name:"🖱️ box selection",parameters:{docs:{description:{story:"\n**Interactive Box Selection (Legacy v1.x)**\n\nMouse interaction and selection callbacks in the original component.\n\n### Code Example:\n```jsx\nimport Boundingbox from 'react-bounding-box';\n\nfunction BoxSelectionExample() {\n  const handleBoxSelection = (index) => {\n    console.log('Selected box index:', index);\n    // Your selection logic here\n  };\n\n  return (\n    <Boundingbox\n      image=\"/path/to/your/image.jpg\"\n      boxes={[\n        [0, 0, 250, 250],\n        [300, 0, 250, 250],\n        [700, 0, 300, 25],\n        [1100, 0, 25, 300],\n      ]}\n      onSelected={handleBoxSelection}\n    />\n  );\n}\n```\n        "}}},render:()=>{const params={image:imageLarge,boxes:[[0,0,250,250],[300,0,250,250],[700,0,300,25],[1100,0,25,300]]};return(0,jsx_runtime.jsxs)("div",{children:[createCodeDisplay("<Boundingbox\n  image={imageLarge}\n  boxes={[\n    [0, 0, 250, 250],\n    [300, 0, 250, 250],\n    [700, 0, 300, 25],\n    [1100, 0, 25, 300]\n  ]}\n  onSelected={(index) => console.log('Selected:', index)}\n/>"),(0,jsx_runtime.jsx)(react_bounding_box.A,{image:params.image,boxes:params.boxes,onSelected:(0,dist.XI)("selected")})]})}},LabelDisplay={name:"🏷️ label display",render:()=>{const params={image:imageLarge,boxes:[{coord:[0,0,250,250],label:"test"},{coord:[300,0,250,250],label:"A"},{coord:[700,0,300,25],label:"B"},{coord:[1100,0,25,300],label:"C"}]};return(0,jsx_runtime.jsxs)("div",{children:[createCodeDisplay("<Boundingbox\n  image={imageLarge}\n  boxes={[\n    { coord: [0, 0, 250, 250], label: 'test' },\n    { coord: [300, 0, 250, 250], label: 'A' },\n    { coord: [700, 0, 300, 25], label: 'B' },\n    { coord: [1100, 0, 25, 300], label: 'C' }\n  ]}\n/>"),(0,jsx_runtime.jsx)(react_bounding_box.A,{image:params.image,boxes:params.boxes})]})}},PixelSegmentation={name:"🎨 pixel segmentation",render:()=>(0,jsx_runtime.jsxs)("div",{children:[createCodeDisplay("<Boundingbox\n  image={demoImage}\n  pixelSegmentation={segmentationJson.body.predictions[0].vals}\n/>"),(0,jsx_runtime.jsx)(react_bounding_box.A,{image:static_image,pixelSegmentation:segmentation.rf.t[0].vZ})]})},SegmentationFromJsonUrl={name:"📄 segmentation from JSON URL",parameters:{docs:{description:{story:'\n**Loading Segmentation from JSON URL**\n\nLoad segmentation data from a JSON file URL for dynamic segmentation rendering.\n\n### Code Example:\n```jsx\nimport Boundingbox from \'react-bounding-box\';\n\nfunction SegmentationFromJsonExample() {\n  return (\n    <Boundingbox\n      image="/path/to/your/image.jpg"\n      segmentationJsonUrl="./path/to/segmentation.json"\n    />\n  );\n}\n```\n\n### JSON Format:\nThe JSON file should contain segmentation data in this format:\n```json\n{\n  "body": {\n    "predictions": [\n      {\n        "vals": [/* pixel segmentation array */]\n      }\n    ]\n  }\n}\n```\n        '}}},render:()=>(0,jsx_runtime.jsxs)("div",{children:[createCodeDisplay("<Boundingbox\n  image={demoImage}\n  pixelSegmentation={segmentationJson.body.predictions[0].vals}\n/>"),(0,jsx_runtime.jsx)(react_bounding_box.A,{image:static_image,pixelSegmentation:segmentation.rf.t[0].vZ})]})},CustomColorScheme={name:"🌈 custom color scheme",parameters:{docs:{description:{story:"\n**Custom Color Scheme for Segmentation**\n\nApply custom colors to segmentation visualization for better distinction between classes.\n\n### Code Example:\n```jsx\nimport Boundingbox from 'react-bounding-box';\n\nfunction CustomColorSchemeExample() {\n  const customColors = [\n    '#1b9e77', '#d95f02', '#7570b3', '#e7298a',\n    '#66a61e', '#e6ab02', '#a6761d', '#666666'\n  ];\n\n  return (\n    <Boundingbox\n      image=\"/path/to/your/image.jpg\"\n      pixelSegmentation={segmentationData}\n      segmentationColors={customColors}\n    />\n  );\n}\n```\n        "}}},render:()=>(0,jsx_runtime.jsxs)("div",{children:[createCodeDisplay("<Boundingbox\n  image={demoImage}\n  pixelSegmentation={segmentationJson.body.predictions[0].vals}\n  segmentationColors={[\n    '#1b9e77','#d95f02','#7570b3','#e7298a',\n    '#66a61e','#e6ab02','#a6761d','#666666'\n  ]}\n/>"),(0,jsx_runtime.jsx)(react_bounding_box.A,{image:static_image,pixelSegmentation:segmentation.rf.t[0].vZ,segmentationColors:["#1b9e77","#d95f02","#7570b3","#e7298a","#66a61e","#e6ab02","#a6761d","#666666"]})]})},RemoteImage={name:"🌐 remote image",parameters:{docs:{description:{story:"\n**Loading Remote Images**\n\nLoad images from remote URLs with segmentation data and separate segmentation canvas.\n\n### Code Example:\n```jsx\nimport Boundingbox from 'react-bounding-box';\n\nfunction RemoteImageExample() {\n  return (\n    <Boundingbox\n      image=\"https://example.com/your-image.jpg\"\n      pixelSegmentation={segmentationData}\n      separateSegmentation={true}\n    />\n  );\n}\n```\n\n### Features:\n- Remote image loading with CORS support\n- Separate segmentation canvas for better performance\n- Maintains aspect ratio and responsiveness\n        "}}},render:()=>(0,jsx_runtime.jsxs)("div",{children:[createCodeDisplay('<Boundingbox\n  image="https://alx.github.io/react-bounding-box/image.jpg"\n  pixelSegmentation={segmentationJson.body.predictions[0].vals}\n  separateSegmentation={true}\n/>'),(0,jsx_runtime.jsx)(react_bounding_box.A,{image:"https://alx.github.io/react-bounding-box/image.jpg",pixelSegmentation:segmentation.rf.t[0].vZ,separateSegmentation:!0})]})},RemoteImageWithCss={name:"💅 remote image with CSS",parameters:{docs:{description:{story:'\n**Remote Image with CSS Styling**\n\nLoad remote images with custom CSS styling and combined segmentation + bounding boxes.\n\n### Code Example:\n```jsx\nimport Boundingbox from \'react-bounding-box\';\n\nfunction RemoteImageWithCssExample() {\n  return (\n    <div className="cssStory">\n      <Boundingbox\n        image="https://example.com/your-image.jpg"\n        pixelSegmentation={segmentationData}\n        boxes={[\n          [50, 50, 100, 100],\n          [200, 150, 120, 80]\n        ]}\n        separateSegmentation={true}\n      />\n    </div>\n  );\n}\n```\n\n### CSS Styling:\n```css\n.cssStory {\n  border: 2px solid #3b82f6;\n  border-radius: 8px;\n  padding: 16px;\n  background: linear-gradient(135deg, #f0f9ff 0%, #e0f2fe 100%);\n  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);\n}\n```\n\n### Features:\n- Remote image loading with CORS support\n- Custom CSS container styling\n- Separate segmentation canvas\n- Combined segmentation and bounding box display\n        '}}},render:()=>(0,jsx_runtime.jsxs)("div",{children:[createCodeDisplay('<div className="cssStory">\n  <Boundingbox\n    image="https://alx.github.io/react-bounding-box/image.jpg"\n    pixelSegmentation={segmentationJson.body.predictions[0].vals}\n    boxes={[\n      [50, 50, 100, 100],\n      [200, 150, 120, 80],\n      [300, 200, 80, 60]\n    ]}\n    separateSegmentation={true}\n  />\n</div>'),(0,jsx_runtime.jsx)("div",{className:"cssStory",children:(0,jsx_runtime.jsx)(react_bounding_box.A,{image:"https://alx.github.io/react-bounding-box/image.jpg",pixelSegmentation:segmentation.rf.t[0].vZ,boxes:[[50,50,100,100],[200,150,120,80],[300,200,80,60]],separateSegmentation:!0})})]})},SegmentationMasks={name:"🎭 segmentation masks",parameters:{docs:{description:{story:"\n**Segmentation Masks with Bounding Boxes**\n\nDisplay segmentation masks alongside bounding boxes for comprehensive object detection visualization.\n\n### Code Example:\n```jsx\nimport Boundingbox from 'react-bounding-box';\n\nfunction SegmentationMasksExample() {\n  const segmentationMasks = [\n    {\n      width: 640,\n      height: 480,\n      data: [/* mask pixel data */]\n    }\n  ];\n\n  const boundingBoxes = [\n    [100, 100, 200, 150],\n    [300, 200, 180, 120]\n  ];\n\n  return (\n    <Boundingbox\n      image=\"/path/to/your/image.jpg\"\n      segmentationMasks={segmentationMasks}\n      boxes={boundingBoxes}\n      separateSegmentation={true}\n    />\n  );\n}\n```\n\n### Features:\n- Combines segmentation masks with bounding boxes\n- Separate segmentation canvas for better performance\n- Supports multiple mask objects with different dimensions\n        "}}},render:()=>(0,jsx_runtime.jsxs)("div",{children:[createCodeDisplay("<Boundingbox\n  image={demoImageDog}\n  segmentationMasks={segmentationMasksJson}\n  boxes={segmentationMasksBoxesJson}\n  separateSegmentation={true}\n/>"),(0,jsx_runtime.jsx)(react_bounding_box.A,{image:dog,segmentationMasks,boxes:segmentationMasksBoxes,separateSegmentation:!0})]})},BorderOnZeroValue={name:"🔲 border on zero value",parameters:{docs:{description:{story:"\n**Border Rendering with Zero Values**\n\nHandle edge cases where bounding boxes have zero width or height values.\n\n### Code Example:\n```jsx\nimport Boundingbox from 'react-bounding-box';\n\nfunction BorderOnZeroValueExample() {\n  const boxesWithZeroValues = [\n    [100, 100, 0, 150],    // Zero width\n    [200, 200, 100, 0],    // Zero height\n    [300, 300, 100, 100]   // Normal box\n  ];\n\n  return (\n    <Boundingbox\n      image=\"/path/to/your/image.jpg\"\n      boxes={boxesWithZeroValues}\n    />\n  );\n}\n```\n\n### Features:\n- Handles zero-width bounding boxes gracefully\n- Handles zero-height bounding boxes gracefully\n- Maintains visual consistency with normal boxes\n- Prevents rendering errors in edge cases\n        "}}},render:()=>(0,jsx_runtime.jsxs)("div",{children:[createCodeDisplay("<Boundingbox\n  image={demoImageDog}\n  boxes={boxesBorderZeroJson}\n/>"),(0,jsx_runtime.jsx)(react_bounding_box.A,{image:dog,boxes:boxesBorderZero})]})},__namedExportsOrder=["DefaultView","XMinMaxCoordinates","AgeRealDataset","BoxSelection","LabelDisplay","PixelSegmentation","SegmentationFromJsonUrl","CustomColorScheme","RemoteImage","RemoteImageWithCss","SegmentationMasks","BorderOnZeroValue"];DefaultView.parameters={...DefaultView.parameters,docs:{...DefaultView.parameters?.docs,source:{originalSource:"{\n  name: '📚 default view',\n  parameters: {\n    docs: {\n      description: {\n        story: `\n**Legacy v1.x BoundingBox Component**\n\nOriginal implementation maintained for backward compatibility. Consider upgrading to Modern v2.x for enhanced performance.\n\n### Legacy Code Example:\n\\`\\`\\`jsx\nimport Boundingbox from 'react-bounding-box';\n\nfunction LegacyExample() {\n  const boxes = [\n    // coord(0,0) = top left corner of image\n    // [x, y, width, height]\n    [0, 0, 250, 250],\n    [300, 0, 250, 250],\n    [700, 0, 300, 25],\n    [1100, 0, 25, 300],\n  ];\n\n  return (\n    <Boundingbox\n      image=\"/path/to/your/image.jpg\"\n      boxes={boxes}\n    />\n  );\n}\n\\`\\`\\`\n\n### Migration Recommendation:\n✨ **Upgrade to Modern v2.x** for 40% better performance and enhanced features while maintaining the same API.\n        `\n      }\n    }\n  },\n  render: () => {\n    const params = {\n      image: demoImageLarge,\n      boxes: [\n      // coord(0,0) = top left corner of image\n      // [x, y, width, height]\n      [0, 0, 250, 250], [300, 0, 250, 250], [700, 0, 300, 25], [1100, 0, 25, 300]]\n    };\n    return <div>\n        <div style={{\n        padding: '10px',\n        background: '#fff3cd',\n        border: '1px solid #ffeaa7',\n        borderRadius: '4px',\n        marginBottom: '10px'\n      }}>\n          <strong>Legacy v1.x Component:</strong> This example uses the original\n          Boundingbox component. Check out the \"Modern BoundingBox (v2.x)\"\n          section for updated examples with enhanced features.\n        </div>\n\n        {createCodeDisplay(`<Boundingbox\n  image={imageLarge}\n  boxes={[\n    [0, 0, 250, 250],\n    [300, 0, 250, 250],\n    [700, 0, 300, 25],\n    [1100, 0, 25, 300]\n  ]}\n/>`)}\n        <Boundingbox image={params.image} boxes={params.boxes} />\n      </div>;\n  }\n}",...DefaultView.parameters?.docs?.source}}},XMinMaxCoordinates.parameters={...XMinMaxCoordinates.parameters,docs:{...XMinMaxCoordinates.parameters?.docs,source:{originalSource:"{\n  name: '📐 xmin/max coordinates',\n  parameters: {\n    docs: {\n      description: {\n        story: `\n**XMin/XMax Coordinate Format**\n\nUse alternative coordinate format with xmin/xmax/ymin/ymax instead of x/y/width/height.\n\n### Code Example:\n\\`\\`\\`jsx\nimport Boundingbox from 'react-bounding-box';\n\nfunction XMinMaxCoordinatesExample() {\n  const boxesXMinMax = [\n    {xmin: 0, ymin: 0, xmax: 50, ymax: 50},\n    {xmin: 100, ymin: 100, xmax: 200, ymax: 200}\n  ];\n\n  return (\n    <Boundingbox\n      image=\"/path/to/your/image.jpg\"\n      boxes={boxesXMinMax}\n    />\n  );\n}\n\\`\\`\\`\n\n### Coordinate Formats:\n- **Array format**: [x, y, width, height]\n- **XMin/Max format**: {xmin, ymin, xmax, ymax}\n- Both formats are supported interchangeably\n        `\n      }\n    }\n  },\n  render: () => {\n    const params = {\n      image: demoImageLarge,\n      boxes: [{\n        xmin: 0,\n        ymin: 0,\n        xmax: 250,\n        ymax: 250\n      }, {\n        xmin: 300,\n        ymin: 0,\n        xmax: 550,\n        ymax: 250\n      }, {\n        xmin: 700,\n        ymin: 0,\n        xmax: 1000,\n        ymax: 25\n      }, {\n        xmin: 1100,\n        ymin: 0,\n        xmax: 1125,\n        ymax: 300\n      }]\n    };\n    return <div>\n        {createCodeDisplay(`<Boundingbox\n  image={imageLarge}\n  boxes={[\n    {xmin: 0, ymin: 0, xmax: 250, ymax: 250},\n    {xmin: 300, ymin: 0, xmax: 550, ymax: 250},\n    {xmin: 700, ymin: 0, xmax: 1000, ymax: 25},\n    {xmin: 1100, ymin: 0, xmax: 1125, ymax: 300}\n  ]}\n/>`)}\n        <Boundingbox image={params.image} boxes={params.boxes} />\n      </div>;\n  }\n}",...XMinMaxCoordinates.parameters?.docs?.source}}},AgeRealDataset.parameters={...AgeRealDataset.parameters,docs:{...AgeRealDataset.parameters?.docs,source:{originalSource:"{\n  name: '👤 Age Real dataset',\n  render: () => <div>\n      {createCodeDisplay(`<Boundingbox\n  image={ageRealImage}\n  boxes={boxesAgeRealData}\n/>`)}\n      <Boundingbox image={demoImageAgeReal} boxes={boxesAgeReal} />\n    </div>\n}",...AgeRealDataset.parameters?.docs?.source}}},BoxSelection.parameters={...BoxSelection.parameters,docs:{...BoxSelection.parameters?.docs,source:{originalSource:"{\n  name: '🖱️ box selection',\n  parameters: {\n    docs: {\n      description: {\n        story: `\n**Interactive Box Selection (Legacy v1.x)**\n\nMouse interaction and selection callbacks in the original component.\n\n### Code Example:\n\\`\\`\\`jsx\nimport Boundingbox from 'react-bounding-box';\n\nfunction BoxSelectionExample() {\n  const handleBoxSelection = (index) => {\n    console.log('Selected box index:', index);\n    // Your selection logic here\n  };\n\n  return (\n    <Boundingbox\n      image=\"/path/to/your/image.jpg\"\n      boxes={[\n        [0, 0, 250, 250],\n        [300, 0, 250, 250],\n        [700, 0, 300, 25],\n        [1100, 0, 25, 300],\n      ]}\n      onSelected={handleBoxSelection}\n    />\n  );\n}\n\\`\\`\\`\n        `\n      }\n    }\n  },\n  render: () => {\n    const params = {\n      image: demoImageLarge,\n      boxes: [\n      // coord(0,0) = top left corner of image\n      // [x, y, width, height]\n      [0, 0, 250, 250], [300, 0, 250, 250], [700, 0, 300, 25], [1100, 0, 25, 300]]\n    };\n    return <div>\n        {createCodeDisplay(`<Boundingbox\n  image={imageLarge}\n  boxes={[\n    [0, 0, 250, 250],\n    [300, 0, 250, 250],\n    [700, 0, 300, 25],\n    [1100, 0, 25, 300]\n  ]}\n  onSelected={(index) => console.log('Selected:', index)}\n/>`)}\n        <Boundingbox image={params.image} boxes={params.boxes} onSelected={action('selected')} />\n      </div>;\n  }\n}",...BoxSelection.parameters?.docs?.source}}},LabelDisplay.parameters={...LabelDisplay.parameters,docs:{...LabelDisplay.parameters?.docs,source:{originalSource:"{\n  name: '🏷️ label display',\n  render: () => {\n    const params = {\n      image: demoImageLarge,\n      boxes: [\n      // coord(0,0) = top left corner of image\n      // [x, y, width, height]\n      {\n        coord: [0, 0, 250, 250],\n        label: 'test'\n      }, {\n        coord: [300, 0, 250, 250],\n        label: 'A'\n      }, {\n        coord: [700, 0, 300, 25],\n        label: 'B'\n      }, {\n        coord: [1100, 0, 25, 300],\n        label: 'C'\n      }]\n    };\n    return <div>\n        {createCodeDisplay(`<Boundingbox\n  image={imageLarge}\n  boxes={[\n    { coord: [0, 0, 250, 250], label: 'test' },\n    { coord: [300, 0, 250, 250], label: 'A' },\n    { coord: [700, 0, 300, 25], label: 'B' },\n    { coord: [1100, 0, 25, 300], label: 'C' }\n  ]}\n/>`)}\n        <Boundingbox image={params.image} boxes={params.boxes} />\n      </div>;\n  }\n}",...LabelDisplay.parameters?.docs?.source}}},PixelSegmentation.parameters={...PixelSegmentation.parameters,docs:{...PixelSegmentation.parameters?.docs,source:{originalSource:"{\n  name: '🎨 pixel segmentation',\n  render: () => <div>\n      {createCodeDisplay(`<Boundingbox\n  image={demoImage}\n  pixelSegmentation={segmentationJson.body.predictions[0].vals}\n/>`)}\n      <Boundingbox image={demoImage} pixelSegmentation={segmentationJson.body.predictions[0].vals} />\n    </div>\n}",...PixelSegmentation.parameters?.docs?.source}}},SegmentationFromJsonUrl.parameters={...SegmentationFromJsonUrl.parameters,docs:{...SegmentationFromJsonUrl.parameters?.docs,source:{originalSource:'{\n  name: \'📄 segmentation from JSON URL\',\n  parameters: {\n    docs: {\n      description: {\n        story: `\n**Loading Segmentation from JSON URL**\n\nLoad segmentation data from a JSON file URL for dynamic segmentation rendering.\n\n### Code Example:\n\\`\\`\\`jsx\nimport Boundingbox from \'react-bounding-box\';\n\nfunction SegmentationFromJsonExample() {\n  return (\n    <Boundingbox\n      image="/path/to/your/image.jpg"\n      segmentationJsonUrl="./path/to/segmentation.json"\n    />\n  );\n}\n\\`\\`\\`\n\n### JSON Format:\nThe JSON file should contain segmentation data in this format:\n\\`\\`\\`json\n{\n  "body": {\n    "predictions": [\n      {\n        "vals": [/* pixel segmentation array */]\n      }\n    ]\n  }\n}\n\\`\\`\\`\n        `\n      }\n    }\n  },\n  render: () => <div>\n      {createCodeDisplay(`<Boundingbox\n  image={demoImage}\n  pixelSegmentation={segmentationJson.body.predictions[0].vals}\n/>`)}\n      <Boundingbox image={demoImage} pixelSegmentation={segmentationJson.body.predictions[0].vals} />\n    </div>\n}',...SegmentationFromJsonUrl.parameters?.docs?.source}}},CustomColorScheme.parameters={...CustomColorScheme.parameters,docs:{...CustomColorScheme.parameters?.docs,source:{originalSource:"{\n  name: '🌈 custom color scheme',\n  parameters: {\n    docs: {\n      description: {\n        story: `\n**Custom Color Scheme for Segmentation**\n\nApply custom colors to segmentation visualization for better distinction between classes.\n\n### Code Example:\n\\`\\`\\`jsx\nimport Boundingbox from 'react-bounding-box';\n\nfunction CustomColorSchemeExample() {\n  const customColors = [\n    '#1b9e77', '#d95f02', '#7570b3', '#e7298a',\n    '#66a61e', '#e6ab02', '#a6761d', '#666666'\n  ];\n\n  return (\n    <Boundingbox\n      image=\"/path/to/your/image.jpg\"\n      pixelSegmentation={segmentationData}\n      segmentationColors={customColors}\n    />\n  );\n}\n\\`\\`\\`\n        `\n      }\n    }\n  },\n  render: () => <div>\n      {createCodeDisplay(`<Boundingbox\n  image={demoImage}\n  pixelSegmentation={segmentationJson.body.predictions[0].vals}\n  segmentationColors={[\n    '#1b9e77','#d95f02','#7570b3','#e7298a',\n    '#66a61e','#e6ab02','#a6761d','#666666'\n  ]}\n/>`)}\n      <Boundingbox image={demoImage} pixelSegmentation={segmentationJson.body.predictions[0].vals} segmentationColors={['#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#a6761d', '#666666']} />\n    </div>\n}",...CustomColorScheme.parameters?.docs?.source}}},RemoteImage.parameters={...RemoteImage.parameters,docs:{...RemoteImage.parameters?.docs,source:{originalSource:"{\n  name: '🌐 remote image',\n  parameters: {\n    docs: {\n      description: {\n        story: `\n**Loading Remote Images**\n\nLoad images from remote URLs with segmentation data and separate segmentation canvas.\n\n### Code Example:\n\\`\\`\\`jsx\nimport Boundingbox from 'react-bounding-box';\n\nfunction RemoteImageExample() {\n  return (\n    <Boundingbox\n      image=\"https://example.com/your-image.jpg\"\n      pixelSegmentation={segmentationData}\n      separateSegmentation={true}\n    />\n  );\n}\n\\`\\`\\`\n\n### Features:\n- Remote image loading with CORS support\n- Separate segmentation canvas for better performance\n- Maintains aspect ratio and responsiveness\n        `\n      }\n    }\n  },\n  render: () => <div>\n      {createCodeDisplay(`<Boundingbox\n  image=\"https://alx.github.io/react-bounding-box/image.jpg\"\n  pixelSegmentation={segmentationJson.body.predictions[0].vals}\n  separateSegmentation={true}\n/>`)}\n      <Boundingbox image={'https://alx.github.io/react-bounding-box/image.jpg'} pixelSegmentation={segmentationJson.body.predictions[0].vals} separateSegmentation={true} />\n    </div>\n}",...RemoteImage.parameters?.docs?.source}}},RemoteImageWithCss.parameters={...RemoteImageWithCss.parameters,docs:{...RemoteImageWithCss.parameters?.docs,source:{originalSource:'{\n  name: \'💅 remote image with CSS\',\n  parameters: {\n    docs: {\n      description: {\n        story: `\n**Remote Image with CSS Styling**\n\nLoad remote images with custom CSS styling and combined segmentation + bounding boxes.\n\n### Code Example:\n\\`\\`\\`jsx\nimport Boundingbox from \'react-bounding-box\';\n\nfunction RemoteImageWithCssExample() {\n  return (\n    <div className="cssStory">\n      <Boundingbox\n        image="https://example.com/your-image.jpg"\n        pixelSegmentation={segmentationData}\n        boxes={[\n          [50, 50, 100, 100],\n          [200, 150, 120, 80]\n        ]}\n        separateSegmentation={true}\n      />\n    </div>\n  );\n}\n\\`\\`\\`\n\n### CSS Styling:\n\\`\\`\\`css\n.cssStory {\n  border: 2px solid #3b82f6;\n  border-radius: 8px;\n  padding: 16px;\n  background: linear-gradient(135deg, #f0f9ff 0%, #e0f2fe 100%);\n  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);\n}\n\\`\\`\\`\n\n### Features:\n- Remote image loading with CORS support\n- Custom CSS container styling\n- Separate segmentation canvas\n- Combined segmentation and bounding box display\n        `\n      }\n    }\n  },\n  render: () => <div>\n      {createCodeDisplay(`<div className="cssStory">\n  <Boundingbox\n    image="https://alx.github.io/react-bounding-box/image.jpg"\n    pixelSegmentation={segmentationJson.body.predictions[0].vals}\n    boxes={[\n      [50, 50, 100, 100],\n      [200, 150, 120, 80],\n      [300, 200, 80, 60]\n    ]}\n    separateSegmentation={true}\n  />\n</div>`)}\n      <div className="cssStory">\n        <Boundingbox image={\'https://alx.github.io/react-bounding-box/image.jpg\'} pixelSegmentation={segmentationJson.body.predictions[0].vals} boxes={[[50, 50, 100, 100], [200, 150, 120, 80], [300, 200, 80, 60]]} separateSegmentation={true} />\n      </div>\n    </div>\n}',...RemoteImageWithCss.parameters?.docs?.source}}},SegmentationMasks.parameters={...SegmentationMasks.parameters,docs:{...SegmentationMasks.parameters?.docs,source:{originalSource:"{\n  name: '🎭 segmentation masks',\n  parameters: {\n    docs: {\n      description: {\n        story: `\n**Segmentation Masks with Bounding Boxes**\n\nDisplay segmentation masks alongside bounding boxes for comprehensive object detection visualization.\n\n### Code Example:\n\\`\\`\\`jsx\nimport Boundingbox from 'react-bounding-box';\n\nfunction SegmentationMasksExample() {\n  const segmentationMasks = [\n    {\n      width: 640,\n      height: 480,\n      data: [/* mask pixel data */]\n    }\n  ];\n\n  const boundingBoxes = [\n    [100, 100, 200, 150],\n    [300, 200, 180, 120]\n  ];\n\n  return (\n    <Boundingbox\n      image=\"/path/to/your/image.jpg\"\n      segmentationMasks={segmentationMasks}\n      boxes={boundingBoxes}\n      separateSegmentation={true}\n    />\n  );\n}\n\\`\\`\\`\n\n### Features:\n- Combines segmentation masks with bounding boxes\n- Separate segmentation canvas for better performance\n- Supports multiple mask objects with different dimensions\n        `\n      }\n    }\n  },\n  render: () => <div>\n      {createCodeDisplay(`<Boundingbox\n  image={demoImageDog}\n  segmentationMasks={segmentationMasksJson}\n  boxes={segmentationMasksBoxesJson}\n  separateSegmentation={true}\n/>`)}\n      <Boundingbox image={demoImageDog} segmentationMasks={segmentationMasksJson} boxes={segmentationMasksBoxesJson} separateSegmentation={true} />\n    </div>\n}",...SegmentationMasks.parameters?.docs?.source}}},BorderOnZeroValue.parameters={...BorderOnZeroValue.parameters,docs:{...BorderOnZeroValue.parameters?.docs,source:{originalSource:"{\n  name: '🔲 border on zero value',\n  parameters: {\n    docs: {\n      description: {\n        story: `\n**Border Rendering with Zero Values**\n\nHandle edge cases where bounding boxes have zero width or height values.\n\n### Code Example:\n\\`\\`\\`jsx\nimport Boundingbox from 'react-bounding-box';\n\nfunction BorderOnZeroValueExample() {\n  const boxesWithZeroValues = [\n    [100, 100, 0, 150],    // Zero width\n    [200, 200, 100, 0],    // Zero height\n    [300, 300, 100, 100]   // Normal box\n  ];\n\n  return (\n    <Boundingbox\n      image=\"/path/to/your/image.jpg\"\n      boxes={boxesWithZeroValues}\n    />\n  );\n}\n\\`\\`\\`\n\n### Features:\n- Handles zero-width bounding boxes gracefully\n- Handles zero-height bounding boxes gracefully\n- Maintains visual consistency with normal boxes\n- Prevents rendering errors in edge cases\n        `\n      }\n    }\n  },\n  render: () => <div>\n      {createCodeDisplay(`<Boundingbox\n  image={demoImageDog}\n  boxes={boxesBorderZeroJson}\n/>`)}\n      <Boundingbox image={demoImageDog} boxes={boxesBorderZeroJson} />\n    </div>\n}",...BorderOnZeroValue.parameters?.docs?.source}}}}}]);