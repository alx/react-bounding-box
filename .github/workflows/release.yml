name: üöÄ Release Management

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (patch, minor, major, or specific version like 1.2.3)'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
          - specific
      specific_version:
        description: 'Specific version (only if version is "specific")'
        required: false
        type: string
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: üì¶ Create Release
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Run full validation
        run: |
          npm run lint
          npm run type-check
          npm test
          npm run build
          npm run security:audit

      - name: Configure git
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"

      - name: Version and tag
        id: version
        run: |
          if [ "${{ github.event.inputs.version }}" = "specific" ]; then
            NEW_VERSION="${{ github.event.inputs.specific_version }}"
            npm version $NEW_VERSION --no-git-tag-version
          else
            npm version ${{ github.event.inputs.version }} --no-git-tag-version
          fi
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "tag_name=v$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Update changelog
        run: |
          echo "## v${{ steps.version.outputs.new_version }} - $(date +%Y-%m-%d)" >> CHANGELOG.tmp
          echo "" >> CHANGELOG.tmp
          echo "### Changes" >> CHANGELOG.tmp
          echo "- Version bump to ${{ steps.version.outputs.new_version }}" >> CHANGELOG.tmp
          echo "" >> CHANGELOG.tmp
          if [ -f CHANGELOG.md ]; then
            cat CHANGELOG.md >> CHANGELOG.tmp
          fi
          mv CHANGELOG.tmp CHANGELOG.md

      - name: Commit changes
        run: |
          git add package.json CHANGELOG.md
          git commit -m "chore: release v${{ steps.version.outputs.new_version }}"
          git tag ${{ steps.version.outputs.tag_name }}

      - name: Push changes
        run: |
          git push origin HEAD:${{ github.ref_name }}
          git push origin ${{ steps.version.outputs.tag_name }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.tag_name }}
          name: Release v${{ steps.version.outputs.new_version }}
          generate_release_notes: true
          body: |
            ## üéâ Release v${{ steps.version.outputs.new_version }}

            Check the [CHANGELOG.md](CHANGELOG.md) for detailed changes.

            ## üì¶ Installation
            ```bash
            npm install react-bounding-box@${{ steps.version.outputs.new_version }}
            ```

            ## üîÑ Changes
            - Check changelog for details
          draft: false
          prerelease: false

  # Job 2: Publish to npm (triggered by tag push)
  publish:
    name: üì§ Publish to NPM
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Run full validation
        run: |
          npm run lint
          npm run type-check || echo "Type check warnings ignored"
          npm test
          npm run build
          npm run security:audit || echo "Security audit warnings ignored"

      - name: Verify package version matches tag
        run: |
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          if [ "$TAG_VERSION" != "$PACKAGE_VERSION" ]; then
            echo "‚ùå Tag version ($TAG_VERSION) does not match package.json version ($PACKAGE_VERSION)"
            exit 1
          fi
          echo "‚úÖ Version validation passed"

      - name: Verify package exports
        run: node scripts/verify-exports.js

      - name: Publish to npm
        run: |
          echo "üì§ Publishing to npm..."
          npm publish --ignore-scripts --access public
          echo "‚úÖ Successfully published to npm"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          body: |
            ## üéâ New Release Published to NPM!

            This release has been automatically published to npm.

            ### üì¶ Installation
            ```bash
            npm install react-bounding-box@${GITHUB_REF#refs/tags/v}
            ```

            ### üîÑ Changes
            - Check the [CHANGELOG.md](CHANGELOG.md) for detailed changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
